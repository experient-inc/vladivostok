require('rxjs/add/operator/map');
require('rxjs/add/operator/toPromise');
var forkJoin_1 = require('rxjs/observable/forkJoin');
var fromPromise_1 = require('rxjs/observable/fromPromise');
function resolve(resolver, state) {
    return resolveNode(resolver, state._root).map(function (_) { return state; });
}
exports.resolve = resolve;
function resolveNode(resolver, node) {
    if (node.children.length === 0) {
        return fromPromise_1.fromPromise(resolveComponent(resolver, node.value).then(function (factory) {
            node.value._resolvedComponentFactory = factory;
            return node.value;
        }));
    }
    else {
        var c = node.children.map(function (c) { return resolveNode(resolver, c).toPromise(); });
        return forkJoin_1.forkJoin(c).map(function (_) { return resolveComponent(resolver, node.value).then(function (factory) {
            node.value._resolvedComponentFactory = factory;
            return node.value;
        }); });
    }
}
function resolveComponent(resolver, snapshot) {
    if (snapshot.component && snapshot._routeConfig) {
        return resolver.resolveComponent(snapshot.component);
    }
    else {
        return Promise.resolve(null);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVzb2x2ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9yZXNvbHZlLnRzIl0sIm5hbWVzIjpbInJlc29sdmUiLCJyZXNvbHZlTm9kZSIsInJlc29sdmVDb21wb25lbnQiXSwibWFwcGluZ3MiOiJBQUFBLFFBQU8sdUJBQXVCLENBQUMsQ0FBQTtBQUMvQixRQUFPLDZCQUE2QixDQUFDLENBQUE7QUFJckMseUJBQXVCLDBCQUEwQixDQUFDLENBQUE7QUFDbEQsNEJBQTBCLDZCQUE2QixDQUFDLENBQUE7QUFLeEQsaUJBQ0ksUUFBMkIsRUFBRSxLQUEwQjtJQUN6REEsTUFBTUEsQ0FBQ0EsV0FBV0EsQ0FBQ0EsUUFBUUEsRUFBRUEsS0FBS0EsQ0FBQ0EsS0FBS0EsQ0FBQ0EsQ0FBQ0EsR0FBR0EsQ0FBQ0EsVUFBQUEsQ0FBQ0EsSUFBSUEsT0FBQUEsS0FBS0EsRUFBTEEsQ0FBS0EsQ0FBQ0EsQ0FBQ0E7QUFDNURBLENBQUNBO0FBSGUsZUFBTyxVQUd0QixDQUFBO0FBRUQscUJBQ0ksUUFBMkIsRUFBRSxJQUFzQztJQUNyRUMsRUFBRUEsQ0FBQ0EsQ0FBQ0EsSUFBSUEsQ0FBQ0EsUUFBUUEsQ0FBQ0EsTUFBTUEsS0FBS0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7UUFDL0JBLE1BQU1BLENBQUNBLHlCQUFXQSxDQUFDQSxnQkFBZ0JBLENBQUNBLFFBQVFBLEVBQU9BLElBQUlBLENBQUNBLEtBQUtBLENBQUNBLENBQUNBLElBQUlBLENBQUNBLFVBQUFBLE9BQU9BO1lBQ3pFQSxJQUFJQSxDQUFDQSxLQUFLQSxDQUFDQSx5QkFBeUJBLEdBQUdBLE9BQU9BLENBQUNBO1lBQy9DQSxNQUFNQSxDQUFDQSxJQUFJQSxDQUFDQSxLQUFLQSxDQUFDQTtRQUNwQkEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7SUFFTkEsQ0FBQ0E7SUFBQ0EsSUFBSUEsQ0FBQ0EsQ0FBQ0E7UUFDTkEsSUFBTUEsQ0FBQ0EsR0FBR0EsSUFBSUEsQ0FBQ0EsUUFBUUEsQ0FBQ0EsR0FBR0EsQ0FBQ0EsVUFBQUEsQ0FBQ0EsSUFBSUEsT0FBQUEsV0FBV0EsQ0FBQ0EsUUFBUUEsRUFBRUEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0EsU0FBU0EsRUFBRUEsRUFBcENBLENBQW9DQSxDQUFDQSxDQUFDQTtRQUN2RUEsTUFBTUEsQ0FBQ0EsbUJBQVFBLENBQUNBLENBQUNBLENBQUNBLENBQUNBLEdBQUdBLENBQUNBLFVBQUFBLENBQUNBLElBQUlBLE9BQUFBLGdCQUFnQkEsQ0FBQ0EsUUFBUUEsRUFBT0EsSUFBSUEsQ0FBQ0EsS0FBS0EsQ0FBQ0EsQ0FBQ0EsSUFBSUEsQ0FBQ0EsVUFBQUEsT0FBT0E7WUFDbEZBLElBQUlBLENBQUNBLEtBQUtBLENBQUNBLHlCQUF5QkEsR0FBR0EsT0FBT0EsQ0FBQ0E7WUFDL0NBLE1BQU1BLENBQUNBLElBQUlBLENBQUNBLEtBQUtBLENBQUNBO1FBQ3BCQSxDQUFDQSxDQUFDQSxFQUgwQkEsQ0FHMUJBLENBQUNBLENBQUNBO0lBQ05BLENBQUNBO0FBQ0hBLENBQUNBO0FBRUQsMEJBQ0ksUUFBMkIsRUFBRSxRQUFnQztJQUMvREMsRUFBRUEsQ0FBQ0EsQ0FBQ0EsUUFBUUEsQ0FBQ0EsU0FBU0EsSUFBSUEsUUFBUUEsQ0FBQ0EsWUFBWUEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7UUFDaERBLE1BQU1BLENBQUNBLFFBQVFBLENBQUNBLGdCQUFnQkEsQ0FBTUEsUUFBUUEsQ0FBQ0EsU0FBU0EsQ0FBQ0EsQ0FBQ0E7SUFDNURBLENBQUNBO0lBQUNBLElBQUlBLENBQUNBLENBQUNBO1FBQ05BLE1BQU1BLENBQUNBLE9BQU9BLENBQUNBLE9BQU9BLENBQUNBLElBQUlBLENBQUNBLENBQUNBO0lBQy9CQSxDQUFDQTtBQUNIQSxDQUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAncnhqcy9hZGQvb3BlcmF0b3IvbWFwJztcclxuaW1wb3J0ICdyeGpzL2FkZC9vcGVyYXRvci90b1Byb21pc2UnO1xyXG5cclxuaW1wb3J0IHtDb21wb25lbnRSZXNvbHZlcn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7T2JzZXJ2YWJsZX0gZnJvbSAncnhqcy9PYnNlcnZhYmxlJztcclxuaW1wb3J0IHtmb3JrSm9pbn0gZnJvbSAncnhqcy9vYnNlcnZhYmxlL2ZvcmtKb2luJztcclxuaW1wb3J0IHtmcm9tUHJvbWlzZX0gZnJvbSAncnhqcy9vYnNlcnZhYmxlL2Zyb21Qcm9taXNlJztcclxuXHJcbmltcG9ydCB7QWN0aXZhdGVkUm91dGVTbmFwc2hvdCwgUm91dGVyU3RhdGVTbmFwc2hvdH0gZnJvbSAnLi9yb3V0ZXJfc3RhdGUnO1xyXG5pbXBvcnQge1RyZWVOb2RlfSBmcm9tICcuL3V0aWxzL3RyZWUnO1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHJlc29sdmUoXHJcbiAgICByZXNvbHZlcjogQ29tcG9uZW50UmVzb2x2ZXIsIHN0YXRlOiBSb3V0ZXJTdGF0ZVNuYXBzaG90KTogT2JzZXJ2YWJsZTxSb3V0ZXJTdGF0ZVNuYXBzaG90PiB7XHJcbiAgcmV0dXJuIHJlc29sdmVOb2RlKHJlc29sdmVyLCBzdGF0ZS5fcm9vdCkubWFwKF8gPT4gc3RhdGUpO1xyXG59XHJcblxyXG5mdW5jdGlvbiByZXNvbHZlTm9kZShcclxuICAgIHJlc29sdmVyOiBDb21wb25lbnRSZXNvbHZlciwgbm9kZTogVHJlZU5vZGU8QWN0aXZhdGVkUm91dGVTbmFwc2hvdD4pOiBPYnNlcnZhYmxlPGFueT4ge1xyXG4gIGlmIChub2RlLmNoaWxkcmVuLmxlbmd0aCA9PT0gMCkge1xyXG4gICAgcmV0dXJuIGZyb21Qcm9taXNlKHJlc29sdmVDb21wb25lbnQocmVzb2x2ZXIsIDxhbnk+bm9kZS52YWx1ZSkudGhlbihmYWN0b3J5ID0+IHtcclxuICAgICAgbm9kZS52YWx1ZS5fcmVzb2x2ZWRDb21wb25lbnRGYWN0b3J5ID0gZmFjdG9yeTtcclxuICAgICAgcmV0dXJuIG5vZGUudmFsdWU7XHJcbiAgICB9KSk7XHJcblxyXG4gIH0gZWxzZSB7XHJcbiAgICBjb25zdCBjID0gbm9kZS5jaGlsZHJlbi5tYXAoYyA9PiByZXNvbHZlTm9kZShyZXNvbHZlciwgYykudG9Qcm9taXNlKCkpO1xyXG4gICAgcmV0dXJuIGZvcmtKb2luKGMpLm1hcChfID0+IHJlc29sdmVDb21wb25lbnQocmVzb2x2ZXIsIDxhbnk+bm9kZS52YWx1ZSkudGhlbihmYWN0b3J5ID0+IHtcclxuICAgICAgbm9kZS52YWx1ZS5fcmVzb2x2ZWRDb21wb25lbnRGYWN0b3J5ID0gZmFjdG9yeTtcclxuICAgICAgcmV0dXJuIG5vZGUudmFsdWU7XHJcbiAgICB9KSk7XHJcbiAgfVxyXG59XHJcblxyXG5mdW5jdGlvbiByZXNvbHZlQ29tcG9uZW50KFxyXG4gICAgcmVzb2x2ZXI6IENvbXBvbmVudFJlc29sdmVyLCBzbmFwc2hvdDogQWN0aXZhdGVkUm91dGVTbmFwc2hvdCk6IFByb21pc2U8YW55PiB7XHJcbiAgaWYgKHNuYXBzaG90LmNvbXBvbmVudCAmJiBzbmFwc2hvdC5fcm91dGVDb25maWcpIHtcclxuICAgIHJldHVybiByZXNvbHZlci5yZXNvbHZlQ29tcG9uZW50KDxhbnk+c25hcHNob3QuY29tcG9uZW50KTtcclxuICB9IGVsc2Uge1xyXG4gICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShudWxsKTtcclxuICB9XHJcbn0iXX0=